module keccak_devide(clk, reset, in512, out32, num, en);
   input clk, rest;
   input [15:0] num;
   input [511:0] in512;
   output [31:0] out32;

   reg [31:0] 	 32*16block[0:15];
   reg 		 out;


   assign out32 = out;

   always @ (posedge clk) begin
      casez(num)
	15'd 0:out <= 32*16block[0];
	15'd1:out <= 32*16block[1];
	15'd2:out <= 32*16block[2];
	15'd3:out <= 32*16block[3];
	15'd4:out <= 32*16block[4];
	15'd5:out <= 32*16block[5];
	15'd6:out <= 32*16block[6];
	15'd7:out <= 32*16block[7];
	15'd8:out <= 32*16block[8];
	15'd9:out <= 32*16block[9];
	15'd10:out <= 32*16block[10];
	15'd11:out <= 32*16block[11];
	15'd12:out <= 32*16block[12];
	15'd13:out <= 32*16block[13];
	15'd14:out <= 32*16block[14];
	15'd15:out <= 32*16block[15];
      end//always

endmodule
